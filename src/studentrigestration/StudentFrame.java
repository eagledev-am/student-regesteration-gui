/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package studentrigestration;

import java.awt.Color;
import java.sql.*;
import java.time.Period;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ABDO
 */
public class StudentFrame extends javax.swing.JFrame {
   
     ArrayList<Student> arr = new ArrayList<>();
     
    /**
     * Creates new form StudentFrame
     */
    public StudentFrame() {
        initComponents();
        
        uPdateTable();
    }
    public void uPdateTable (){
        ConnectionDb connect = new ConnectionDb();
          DefaultTableModel table = new DefaultTableModel();
          
          
          table = (DefaultTableModel) tabel1.getModel();
          table.setRowCount(0);
        try(
                Connection connection = connect.connect();
                PreparedStatement statement = connection.prepareStatement("select * from student");
                ){
                ResultSet result = statement.executeQuery();
                Object row [] = new Object[5];
                while(result.next()){
                    
                   String id = result.getString("id");
                   String name = result.getString("Name");
                   String Mobile = result.getString("Mobile");
                   String course =  result.getString("course");
                   row[0] = tabel1.getRowCount()+1 ; row[1]= id ; row[2] = name; row [3] = Mobile ; row[4] = course;
                   table.addRow(row);
                }
                
        }
        catch(SQLException e){
            System.out.println(e.getMessage());
        }
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        studentName = new javax.swing.JLabel();
        mobile = new javax.swing.JLabel();
        course = new javax.swing.JLabel();
        studentField = new javax.swing.JTextField();
        mobileField = new javax.swing.JTextField();
        courseField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Registration");
        setBackground(new java.awt.Color(80, 80, 80));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Student Registeration");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        studentName.setText("StudentName");

        mobile.setText("Mobile");

        course.setText("Course");

        studentField.setToolTipText("");
        studentField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        studentField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studentFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                studentFieldFocusLost(evt);
            }
        });
        studentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentFieldActionPerformed(evt);
            }
        });

        mobileField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mobileFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mobileFieldFocusLost(evt);
            }
        });

        courseField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                courseFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                courseFieldFocusLost(evt);
            }
        });
        courseField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseFieldActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mobile)
                    .addComponent(studentName)
                    .addComponent(course)
                    .addComponent(addButton))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(studentField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mobileField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(courseField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentName)
                    .addComponent(studentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobile))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(course))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(editButton)
                    .addComponent(deleteButton))
                .addContainerGap())
        );

        tabel1.setAutoCreateRowSorter(true);
        tabel1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#num", "id", "Name", "Mobile", "Course"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabel1);
        if (tabel1.getColumnModel().getColumnCount() > 0) {
            tabel1.getColumnModel().getColumn(0).setResizable(false);
            tabel1.getColumnModel().getColumn(1).setResizable(false);
            tabel1.getColumnModel().getColumn(2).setResizable(false);
            tabel1.getColumnModel().getColumn(3).setResizable(false);
            tabel1.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(297, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(275, 275, 275))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(71, 71, 71))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        DefaultTableModel table = new DefaultTableModel();
        table = (DefaultTableModel) tabel1.getModel();
        int row = tabel1.getSelectedRow();
        String id = (String)tabel1.getValueAt(row, 1);
        int message = JOptionPane.showConfirmDialog(null, "Do you want to delete this Record", "ConfirmMessage", JOptionPane.YES_NO_OPTION);
        
        try{
            ConnectionDb connect = new ConnectionDb();
            Connection connection = connect.connect();
            Statement statement = connection.createStatement();
            if (message == JOptionPane.YES_OPTION)  statement.execute("delete from student where id ='"+id +"';" );
            
            
        }
        catch(SQLException e){
            System.out.println(e.getMessage());
        }
        uPdateTable();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void studentFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentFieldFocusGained
//        if (studentField.getText ().equals("Student Name")){
//            studentField.setText("");
//            studentField.setForeground(new Color (153 ,153, 153));
//     /   }
    }//GEN-LAST:event_studentFieldFocusGained

    private void mobileFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mobileFieldFocusGained
//        if (mobileField.getText().equals("Moblie")){
//            mobileField.setText("");
//            mobileField.setForeground(new Color (153 , 153 , 153));
//        }
    }//GEN-LAST:event_mobileFieldFocusGained

    private void courseFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_courseFieldFocusGained
//        if(courseField.getText().equals("Course")){
//            courseField.setText("");
//            courseField.setForeground(new Color (153 , 153 , 153));
//        }
    }//GEN-LAST:event_courseFieldFocusGained

    private void studentFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studentFieldFocusLost
//        if (studentField.getText().equals("")){
//            studentField.setText("Student Name");
//            studentField.setForeground(new Color (153 , 153 , 153));
//        }
    }//GEN-LAST:event_studentFieldFocusLost

    private void mobileFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mobileFieldFocusLost
//       if (mobileField.getText().equals("")){
//           mobileField.setText("Mobile");
//           mobileField.setForeground(new Color (153 , 153 , 153));
//       }
    }//GEN-LAST:event_mobileFieldFocusLost

    private void courseFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_courseFieldFocusLost
//        if (courseField.getText().equals("")){
//            courseField.setText("Course");
//            courseField.setForeground(new Color (153 , 153 , 153));
//        }
    }//GEN-LAST:event_courseFieldFocusLost

    private void courseFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseFieldActionPerformed

    private void studentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentFieldActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String name = studentField.getText().toString();
        String mobile = mobileField.getText().toString();
        String course = courseField.getText().toString();
        
        try {
            ConnectionDb connect = new ConnectionDb();
            PreparedStatement statement =  connect.connect().prepareStatement("Insert student (Name,Mobile,course ) values ( ?, ? , ? )");
            statement.setString(1, name);
            statement.setString(2 , mobile);
            statement.setString(3, course);
            statement.execute();
            Student student = new Student(name , mobile , course);
            arr.add(student);
            
        }
        catch(SQLException e){
            System.out.println(e.getMessage());
        }
        DefaultTableModel model = new DefaultTableModel();
        
//        model = (DefaultTableModel) tabel1.getModel();
//        model.addRow(new Object[] { tabel1.getRowCount()+1 , name , mobile , course });
           uPdateTable();
        
    
      
        
       
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
           String name = studentField.getText().toString();
           String mobile = mobileField.getText().toString();
           String course = courseField.getText().toString();
           DefaultTableModel t = new DefaultTableModel();
           t = (DefaultTableModel) tabel1.getModel();
           int index = tabel1.getSelectedRow();
           ConnectionDb connect = new ConnectionDb();
           try (
                   Connection connection = connect.connect();
                   PreparedStatement statement =connection.prepareStatement("update student set Name = ? , Mobile = ? , course = ? where id = ?");
                   
                   ){
                statement.setString(1, name);
                statement.setString(2, mobile);
                statement.setString(3, course);
                statement.setString(4, String.valueOf(t.getValueAt(index , 1)));
                statement.execute();
                
                t.setValueAt(name, index , 2);
                t.setValueAt(mobile, index , 3);
                t.setValueAt(course, index, 4);
                
           }
           catch(SQLException e){
               
           }
           JOptionPane.showMessageDialog(null, "RECORD UPDATED");
           
           
           
    }//GEN-LAST:event_editButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel course;
    private javax.swing.JTextField courseField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mobile;
    private javax.swing.JTextField mobileField;
    private javax.swing.JTextField studentField;
    private javax.swing.JLabel studentName;
    private javax.swing.JTable tabel1;
    // End of variables declaration//GEN-END:variables
}
